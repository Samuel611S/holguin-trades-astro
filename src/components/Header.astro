---
import { footerData } from '../data/footer';
import { siteData } from '../data/site';

const navItems = [
  { text: 'Home', href: '/' },
  { text: 'Blog', href: '/blog' },
  { text: 'FAQs', href: '/faqs' },
  { text: 'Disclaimers', href: '/disclaimers' },
  { text: 'Contact', href: '/contact' },
];

const currentPath = Astro.url.pathname;
---

<header class="sticky top-0 z-50 bg-gray-900/90 backdrop-blur-md border-b border-primary-500/20">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-20">
      <!-- Logo -->
      <div class="flex items-center animate-fade-in">
        <a href="/" class="flex items-center space-x-3 group">
          <div class="overflow-hidden">
            <img 
              src="/primary_website_logo1_ht_2025May16.png"  
              alt="Holguin Trades Logo" 
              class="h-10 w-auto animate-shark-swim"
            />
          </div>
          <div class="hidden sm:block">
            <h1 class="text-2xl font-bold bg-gradient-to-r from-primary-400 to-primary-600 bg-clip-text text-transparent">
              {siteData.siteName}
            </h1>
          </div>
        </a>
      </div>
      
      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center space-x-8">
        {navItems.map((item, index) => (
          <a 
            href={item.href} 
            class={`relative px-3 py-2 text-sm font-medium transition-all duration-300 hover:text-primary-400 animate-slide-down opacity-0`}
            style={`animation-delay: ${100 + index * 100}ms`}
          >
            {item.text}
            <span class={`absolute inset-x-0 -bottom-1 h-0.5 bg-primary-500 transform origin-left transition-transform duration-300 ${
              currentPath === item.href || (item.href !== '/' && currentPath.startsWith(item.href)) 
                ? 'scale-x-100' 
                : 'scale-x-0'
            }`}></span>
          </a>
        ))}
        
        <!-- CTA Button -->
        <a 
          href="/testimonials-submit-form" 
          class="px-6 py-2.5 bg-primary-500 text-white font-semibold rounded-lg hover:bg-primary-600 transition-all duration-300 hover:-translate-y-1 hover:shadow-lg hover:shadow-primary-500/25 animate-slide-down opacity-0"
          style="animation-delay: 600ms"
        >
          Get Started
        </a>
      </nav>

      <!-- Mobile menu button -->
      <button 
        class="md:hidden relative w-10 h-10 flex flex-col justify-center items-center space-y-1.5 group animate-fade-in"
        id="mobile-menu-button"
        aria-label="Toggle navigation"
      >
        <span class="block w-6 h-0.5 bg-gray-300 transition-all duration-300 group-hover:bg-primary-400" id="line1"></span>
        <span class="block w-6 h-0.5 bg-gray-300 transition-all duration-300 group-hover:bg-primary-400" id="line2"></span>
        <span class="block w-6 h-0.5 bg-gray-300 transition-all duration-300 group-hover:bg-primary-400" id="line3"></span>
      </button>
    </div>

    <!-- Mobile Navigation -->
    <div class="md:hidden mobile-menu hidden">
      <div class="px-2 pt-2 pb-3 space-y-1 bg-gray-800/95 backdrop-blur-md rounded-lg mt-2 border border-primary-500/20">
        {navItems.map((item, index) => (
          <a
            href={item.href}
            class={`block px-3 py-2 text-base font-medium rounded-md transition-all duration-300 ${
              currentPath === item.href || (item.href !== '/' && currentPath.startsWith(item.href))
                ? 'text-primary-400 bg-primary-500/10'
                : 'text-gray-300 hover:text-white hover:bg-gray-700/50'
            }`}
          >
            {item.text}
          </a>
        ))}
        <a
          href="/testimonials-submit-form"
          class="block px-3 py-2 mt-4 text-center bg-primary-500 text-white font-semibold rounded-md transition-all duration-300 hover:bg-primary-600"
        >
          Get Started
        </a>
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.querySelector('.mobile-menu');
    const line1 = document.getElementById('line1');
    const line2 = document.getElementById('line2');
    const line3 = document.getElementById('line3');
    
    if (mobileMenuButton && mobileMenu && line1 && line2 && line3) {
      mobileMenuButton.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden');
        
        // Animate to X
        if (mobileMenu.classList.contains('hidden')) {
          line1.style.transform = '';
          line2.style.opacity = '1';
          line3.style.transform = '';
        } else {
          line1.style.transform = 'translateY(8px) rotate(45deg)';
          line2.style.opacity = '0';
          line3.style.transform = 'translateY(-8px) rotate(-45deg)';
          
          // Add animation to mobile menu items
          const menuItems = mobileMenu.querySelectorAll('a');
          menuItems.forEach((item, index) => {
            item.classList.add('animate-slide-up', 'opacity-0');
            item.style.animationDelay = `${index * 100}ms`;
            setTimeout(() => {
              item.classList.remove('opacity-0');
            }, 50);
          });
        }
      });
    }
  });
</script>